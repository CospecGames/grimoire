main {
    let i = 1 + 2.1 as int;
    print(i);
}

/*
Todo:
    - déclaration d'une variable locale et d'une fonction du même nom

    Suggestions:
    Système de channel comme mosaiq
    Variables globales
    Type Object (orienté prototype)
    Type Pointeur (type uniquement accessible dans les primitives)
    Multiples valeurs de retour: a, b = foo(); func() int, int {}
    

*/
/*
main {
    func() func(int) foo;
    
    foo = &test;
    func(int) p = foo();
    p(5);
}

func test() func(int) {
    let a = func(int t) {
        print(t);
    };
    return a;
}

*/

/*
    Structures

    struct Foo {
        int a; //register 0 int
        float b; //register 1 float
        bool c; //register 2 bool
    }

    main {
        Foo foo;
        foo.a //parse identifier avec opérateur '.'
        //On récupère le type Foo et récupère a dans Foo
        //comme une variable locale dans une fonction
    }

*/
/*
struct vec2 {
    float x;
    float y;
}

vec2 v;//register 2 int
v.x = 0;
v.y = 0;
*/



/*To do:
    (x) vec2 a = b;
    () a = [2.0, 5.0];
    () return a;
*/